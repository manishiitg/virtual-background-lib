load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

# Needed by TensorFlow
http_archive(
  name = "io_bazel_rules_closure",
  sha256 = "7d206c2383811f378a5ef03f4aacbcf5f47fd8650f6abbc3fa89f3a27dd8b176",
  strip_prefix = "rules_closure-0.10.0",
  urls = [
    "https://mirror.bazel.build/github.com/bazelbuild/rules_closure/archive/0.10.0.tar.gz",
    "https://github.com/bazelbuild/rules_closure/archive/0.10.0.tar.gz",
  ],
)

# TensorFlow
local_repository(
  name = "org_tensorflow",
  path = "/tensorflow_src",
)


load("@org_tensorflow//tensorflow:workspace3.bzl", "tf_workspace3")

tf_workspace3()

load("@org_tensorflow//tensorflow:workspace2.bzl", "tf_workspace2")

tf_workspace2()

load("@org_tensorflow//tensorflow:workspace1.bzl", "tf_workspace1")

tf_workspace1()

load("@org_tensorflow//tensorflow:workspace0.bzl", "tf_workspace0")

tf_workspace0()

# MediaPipe
local_repository(
  name="org_mediapipe",
  path = "/mediapipe_src",
)

# Needed by Emscripten
http_archive(
  name = "build_bazel_rules_nodejs",
  sha256 = "0f2de53628e848c1691e5729b515022f5a77369c76a09fbe55611e12731c90e3",
  urls = ["https://github.com/bazelbuild/rules_nodejs/releases/download/2.0.1/rules_nodejs-2.0.1.tar.gz"],
)

load("@build_bazel_rules_nodejs//:index.bzl", "npm_install")

# emscripten 2.0.16
http_archive(
  name = "emscripten",
  sha256 = "e527638b224d9a30dc7e5fa4b9bd2eb2ab76ad306739ba8cacf5a5e333933a2a",
  strip_prefix = "install",
  url = "https://storage.googleapis.com/webassembly/emscripten-releases-builds/linux/80d9674f2fafa6b9346d735c42d5c52b8cc8aa8e/wasm-binaries.tbz2",
  build_file = "//emscripten_toolchain:emscripten.BUILD",
  type = "tar.bz2",
)

npm_install(
  name = "npm",
  package_json = "@emscripten//:emscripten/package.json",
  package_lock_json = "@emscripten//:emscripten/package-lock.json",
)